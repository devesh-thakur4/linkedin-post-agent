{
  "name": "linkedin post agent",
  "nodes": [
    {
      "parameters": {
        "content": "# 🛠️ Setup Guide  \n**Author:** [Nate Herk](https://www.youtube.com/@nateherk)\n\nThis guide will walk you through the four steps to fully configure your automation workflow using OpenRouter, Tavily, OpenAI, and either Gmail or LinkedIn.\n\n---\n\n## ✅ Step 1: Set Up OpenRouter Credentials  \n1. Go to [openrouter.ai](https://openrouter.ai/)  \n2. Create an account and generate your API key  \n3. In n8n, create a new credential and paste in your OpenRouter API key for use with chat models  \n\n---\n\n## ✅ Step 2: Add Your Tavily Credential  \n1. Visit [tavily.com](https://tavily.com/)  \n2. Sign up and retrieve your API key  \n3. Create a new HTTP credential in n8n and input your Tavily key for web search capabilities  \n\n---\n\n## ✅ Step 3: Configure OpenAI for Image Generation  \n1. Go to the [OpenAI API Platform](https://platform.openai.com/docs/overview)  \n2. Generate an API key  \n3. In n8n, create a credential and use it in your HTTP Request node for generating images  \n\n---\n\n## ✅ Step 4: Connect Gmail or LinkedIn  \nTo distribute your AI-generated content, connect one of the following:  \n- **Gmail:** Use OAuth2 credentials and the Gmail node to send content via email  \n- **LinkedIn:** Use OAuth2 or an HTTP node (with access token) to post content directly to your feed  \n\n---\n\nNow you're ready to run your workflow. Happy automating!\n",
        "height": 980,
        "width": 720
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1984,
        -368
      ],
      "id": "179b6f7b-3983-478e-bdbe-4af5a008a99a",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "toolDescription": "Use this tool to search the web. ",
        "method": "POST",
        "url": "https://api.tavily.com/search",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"query\": \"{searchTerm}\",\n  \"topic\": \"general\",\n  \"search_depth\": \"advanced\",\n  \"chunks_per_source\": 3,\n  \"max_results\": 1,\n  \"time_range\": null,\n  \"days\": 7,\n  \"include_answer\": true,\n  \"include_raw_content\": false,\n  \"include_images\": false,\n  \"include_image_descriptions\": false,\n  \"include_domains\": [],\n  \"exclude_domains\": []\n}",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "searchTerm",
              "description": "What the user is searching for. "
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        528,
        32
      ],
      "id": "ee2bfb98-5a5c-4f8e-989e-5996f9cab2e9",
      "name": "Tavily",
      "credentials": {
        "httpHeaderAuth": {
          "id": "kCk7li94EM19jLzy",
          "name": "Tavily search"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.linkedin.com/v2/userinfo",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -224,
        240
      ],
      "id": "8fc21324-117c-4aa0-8f2f-92f624e35e80",
      "name": "Get UserID5",
      "credentials": {
        "httpHeaderAuth": {
          "id": "0LbaltwYsBeGt07Q",
          "name": "linkedin token"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.linkedin.com/v2/assets?action=registerUpload",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"registerUploadRequest\": {\n        \"recipes\": [\n            \"urn:li:digitalmediaRecipe:feedshare-image\"\n        ],\n        \"owner\": \"urn:li:person:{{ $json.sub }}\",\n        \"serviceRelationships\": [\n            {\n                \"relationshipType\": \"OWNER\",\n                \"identifier\": \"urn:li:userGeneratedContent\"\n            }\n        ]\n    }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        240
      ],
      "id": "55c52327-f361-4493-8bb8-47d7ca7b2820",
      "name": "Register Image Upload",
      "credentials": {
        "httpHeaderAuth": {
          "id": "0LbaltwYsBeGt07Q",
          "name": "linkedin token"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.value.uploadMechanism['com.linkedin.digitalmedia.uploading.MediaUploadHttpRequest'].uploadUrl }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        464,
        240
      ],
      "id": "4a3c182d-d315-404c-a97c-c816d40f07fb",
      "name": "upload image file",
      "credentials": {
        "httpHeaderAuth": {
          "id": "0LbaltwYsBeGt07Q",
          "name": "linkedin token"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -672,
        -160
      ],
      "id": "16476bfd-92a6-406d-968a-a1ce44f2d305",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $json.id }}"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -448,
        -112
      ],
      "id": "dc2e4029-7017-4603-a8f2-8b161a55a3ea",
      "name": "Download file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "7toRoTPI7CIYKm52",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -240,
        -192
      ],
      "id": "dcd3b481-059c-4e80-b594-6b0a4d54ba18",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googlePalmApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "applicatiion/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"contents\": [\n    {\n      \"parts\": [\n        {\n          \"text\": \"Describe this image in detail.\"\n        },\n        {\n          \"inline_data\": {\n            \"mime_type\": \"image/jpeg\",\n            \"data\": \"{{ $json.data }}\"\n          }\n        }\n      ]\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        80,
        -192
      ],
      "id": "0495913a-4783-4951-a284-1eb69c4ba250",
      "name": "HTTP Request",
      "credentials": {
        "googlePalmApi": {
          "id": "YGUXh5Jp1zBYlCA8",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        336,
        16
      ],
      "id": "5237c521-fe10-4856-a9d3-29f13e65a896",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "YGUXh5Jp1zBYlCA8",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nconst updatedItems = items.map((item) => {\n  // Replace newlines in item.json.output\n  item.json.output = item.json.output.replace(\n    /\\n/g,\n    \"\\\\n\",\n  );\n  return item;\n});\n\nreturn updatedItems;\n\n\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        992,
        -192
      ],
      "id": "2f766f5d-f50c-425f-b17e-b3b69a441b3d",
      "name": "Code in JavaScript1"
    },
    {
      "parameters": {
        "unit": "hours"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1040,
        320
      ],
      "id": "ce32534d-4f31-4e73-aee6-e24f45523f15",
      "name": "Wait",
      "webhookId": "a5278a70-386b-4a57-8b1b-7cfea64b0982"
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "limit": 10,
        "filter": {
          "folderId": {
            "__rl": true,
            "value": "https://drive.google.com/drive/folders/1TzTQRvk9iIN9KXVcTXoYA3TNcorgyGGO?usp=drive_link",
            "mode": "url"
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -944,
        -112
      ],
      "id": "ff50d9ec-0d11-4079-a983-99a945bce5e9",
      "name": "Search files and folders",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "7toRoTPI7CIYKm52",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1TzTQRvk9iIN9KXVcTXoYA3TNcorgyGGO",
          "mode": "list",
          "cachedResultName": "image ",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1TzTQRvk9iIN9KXVcTXoYA3TNcorgyGGO"
        },
        "event": "fileCreated",
        "options": {}
      },
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -1200,
        -96
      ],
      "id": "d1d478ed-eefb-40d8-b200-ddce23283b5c",
      "name": "Google Drive Trigger",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "7toRoTPI7CIYKm52",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"post_type\": \"image\",\n  \"image_url\": \"https://drive.google.com/uc?export=view&id={{ $('Download file').item.json.id }}\",\n  \"caption\": \"Test image upload\"\n}\n",
        "includeOtherFields": true,
        "options": {
          "stripBinary": true
        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1264,
        -192
      ],
      "id": "08cf8e46-5dc2-4562-b348-358acbaa436d",
      "name": "Configure Post Settings1"
    },
    {
      "parameters": {
        "url": "={{ $('Configure Post Settings1').item.json.image_url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        208,
        240
      ],
      "id": "6002b2b9-a379-4f63-9ab6-a3419805d112",
      "name": "download image"
    },
    {
      "parameters": {
        "chatId": "6009740293",
        "text": "✅ Image uploaded successfully!|🖼️ in google sheet",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -448,
        -400
      ],
      "id": "0b29f348-816f-4c80-a4b7-4ea92da2b4ec",
      "name": "Send a text message1",
      "webhookId": "a5013cda-7cd4-4975-acca-2ff53a9124e3",
      "credentials": {
        "telegramApi": {
          "id": "QvKGdhzRZo9K2GiG",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.linkedin.com/v2/ugcPosts",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"author\": \"urn:li:person:{{ $('Get UserID5').item.json.sub }}\",\n    \"lifecycleState\": \"PUBLISHED\",\n    \"specificContent\": {\n        \"com.linkedin.ugc.ShareContent\": {\n            \"shareCommentary\": {\n                \"text\": \"{{ $('Code in JavaScript1').item.json.output }}\"\n            },\n            \"shareMediaCategory\": \"IMAGE\",\n            \"media\": [\n                {\n                    \"status\": \"READY\",\n                    \"description\": {\n                        \"text\": \"Center stage!\"\n                    },\n                    \"media\": \"{{ $('Register Image Upload').item.json.value.asset }}\",\n                    \"title\": {\n                        \"text\": \"I don't know where this text come\"\n                    }\n                }\n            ]\n        }\n    },\n    \"visibility\": {\n        \"com.linkedin.ugc.MemberNetworkVisibility\": \"PUBLIC\"\n    }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        704,
        240
      ],
      "id": "f881e046-c1bb-4339-a2e7-3de1a4b709bf",
      "name": "create post1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "0LbaltwYsBeGt07Q",
          "name": "linkedin token"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"output\"]}}",
              "operation": "contains",
              "value2": "error"
            }
          ]
        }
      },
      "id": "1b99fa4f-72e3-4977-bd9b-b070dc955255",
      "name": "IF (Output Contains Error)",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        688,
        -208
      ]
    },
    {
      "parameters": {
        "amount": 5,
        "unit": "seconds"
      },
      "id": "7c1d81c4-7502-4b99-ab9d-e9a84af51705",
      "name": "Wait 5s",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        816,
        -416
      ],
      "webhookId": "b31676e7-00c4-4c81-ad03-425b831df279"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={\n  \"chatInput\": \"={{ $json.candidates[0].content.parts[0].text }}\"\n}\n",
        "options": {
          "systemMessage": "=Overview\nYou are an AI text analyzer specialized in transforming research and raw information into professional, educational, and engaging LinkedIn posts. Your role is to carefully analyze provided topics, extract key insights, and craft them into posts that resonate with a professional audience.\n\nObjectives\n\nAlways begin by attempting a real-time search using the Tavily tool to gather the most accurate, up-to-date information on the topic.\n\nIf the search fails or cannot be accessed, do not output an error. Instead:\n\nContinue writing the LinkedIn post using your internal knowledge.\n\nMention that insights are based on general expertise rather than live sources.\n\nSkip source attribution if no external data is available.\n\nAnalyze the findings (from Tavily or fallback knowledge) and identify the most relevant, insightful, and shareable points.\n\nGenerate a well-structured LinkedIn post that:\n\nStarts with an engaging hook\n\nMaintains a professional, analytical tone\n\nIs clear, concise, and easy to read\n\nProvides educational and insightful value\n\nUses emojis only when highly relevant (minimal usage)\n\nIncludes proper source attribution when available\n\nIncorporates relevant, trending hashtags to improve visibility\n\nEnds with a clear call to action (e.g., asking for thoughts, feedback, or shares)\n\nOutput Instructions\nYour ONLY output should be the final LinkedIn post text.\nDo not include explanations, notes, or anything beyond the post itself.\n\nExample Workflow\n\nReceive a topic (e.g., “The ROI of warehouse automation”).\n\nUse Tavily to search and gather recent information, studies, or expert insights.\n\nIf Tavily is unavailable, rely on internal expertise.\n\nHighlight the most valuable takeaways.\n\nDraft a LinkedIn post with clear structure, citations when possible, relevant hashtags, and a call to action"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        352,
        -192
      ],
      "id": "c807d89a-6dfa-47ad-8188-8357618e0b34",
      "name": "content generate",
      "retryOnFail": true,
      "maxTries": 5
    }
  ],
  "pinData": {},
  "connections": {
    "Tavily": {
      "ai_tool": [
        [
          {
            "node": "content generate",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get UserID5": {
      "main": [
        [
          {
            "node": "Register Image Upload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Register Image Upload": {
      "main": [
        [
          {
            "node": "download image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "upload image file": {
      "main": [
        [
          {
            "node": "create post1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Send a text message1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download file": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "content generate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "content generate",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript1": {
      "main": [
        [
          {
            "node": "Configure Post Settings1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search files and folders": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive Trigger": {
      "main": [
        [
          {
            "node": "Search files and folders",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Configure Post Settings1": {
      "main": [
        [
          {
            "node": "Get UserID5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "download image": {
      "main": [
        [
          {
            "node": "upload image file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create post1": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF (Output Contains Error)": {
      "main": [
        [
          {
            "node": "Wait 5s",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code in JavaScript1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 5s": {
      "main": [
        [
          {
            "node": "content generate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "content generate": {
      "main": [
        [
          {
            "node": "IF (Output Contains Error)",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "5716211c-6b68-40ed-a9ba-c646574b7893",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "1cd9bf501bdc0889f681e24b22a4d91e8318f611f1fa5fe52e217327bdfbc110"
  },
  "id": "4jEh366Drcb4DHzH",
  "tags": []
}